/*
 * Copyright (C) 2001-2011 Ideaworks3D Ltd.
 * All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Ideaworks Labs.
 * This file consists of source code released by Ideaworks Labs under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_ADMOB_H
#define S3E_EXT_ADMOB_H

#include <s3eTypes.h>

enum s3eAdmobCallback
{
	S3E_ADMOB_CALLBACK_AD_LOAD,
	S3E_ADMOB_CALLBACK_AD_FAIL,
	S3E_ADMOB_CALLBACK_AD_WILL_PRESENT_SCREEN,
	S3E_ADMOB_CALLBACK_AD_DID_DISMISS_SCREEN,
	S3E_ADMOB_CALLBACK_INTERSTITIAL_BEGIN,
	S3E_ADMOB_CALLBACK_INTERSTITIAL_END,
	S3E_ADMOB_CALLBACK_MAX
};

typedef enum s3eAdmob_AdSize
{

    Admob_kGADAdSizeBanner  = 1,
    Admob_kGADAdSizeMediumRectangle = 2,
    Admob_kGADAdSizeFullBanner  = 3,
    Admob_kGADAdSizeLeaderBoard  = 4,
	Admob_kGADAdSizeSkyscraper = 5,
	Admob_kGADAdSizeInterstitial = 6,

} s3eAdmob_AdSize;

typedef enum s3eAdmob_Orientation
{
    Admob_kGADOrientationPortrait  = 0,
    Admob_kGADOrientationLandscape = 1,
    Admob_kGADOrientationPortraitDown  = 2,
    Admob_kGADOrientationLandscapeDown  = 3,
} s3eAdmob_Orientation;
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Returns S3E_TRUE if the Admob extension is available.
 */
s3eBool s3eAdmobAvailable();

/**
 * Registers a callback to be called for an operating system event.
 *
 * The available callback types are listed in @ref s3eAdmobCallback.
 * @param cbid ID of the event for which to register.
 * @param fn callback function.
 * @param userdata Value to pass to the @e userdata parameter of @e NotifyFunc.
 * @return
 *  - @ref S3E_RESULT_SUCCESS if no error occurred.
 *  - @ref S3E_RESULT_ERROR if the operation failed.\n
 *
 * @see s3eAdmobUnRegister
 * @note For more information on the system data passed as a parameter to the callback
 * registered using this function, see the @ref s3eAdmobCallback enum.
 */
s3eResult s3eAdmobRegister(s3eAdmobCallback cbid, s3eCallback fn, void* userData);

/**
 * Unregister a callback for a given event.
 * @param cbid ID of the callback for which to register.
 * @param fn Callback Function.
 * @return
 * - @ref S3E_RESULT_SUCCESS if no error occurred.
 * - @ref S3E_RESULT_ERROR if the operation failed.\n
 * @note For more information on the systemData passed as a parameter to the callback
 * registered using this function, see the s3eAdmobCallback enum.
 * @note It is not necessary to define a return value for any registered callback.
 * @see s3eAdmobRegister
 */
s3eResult s3eAdmobUnRegister(s3eAdmobCallback cbid, s3eCallback fn);

s3eResult s3eAdmobStart(const char* pub_id, int ad_type, int orientation, int x, int y);

s3eResult s3eAdmobResize(int ad_type);

s3eResult s3eAdmobShow();

s3eResult s3eAdmobRefresh();

s3eResult s3eAdmobHide();

s3eResult s3eAdmobMove(int orientation, int x, int y);

s3eResult s3eAdmobShowInterstitial(const char* med_id);

s3eResult s3eAdmobShowSplash(const char* med_id);

S3E_END_C_DECL

#endif /* !S3E_EXT_ADMOB_H */
